<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lottery.dao.LotteryItemMapper" >
  <resultMap id="BaseResultMap" type="com.lottery.model.LotteryItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="lotteryid" property="lotteryid" jdbcType="INTEGER" />
    <result column="orderno" property="orderno" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="gcount" property="gcount" jdbcType="INTEGER" />
    <result column="mcount" property="mcount" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, lotteryid, orderno, name, icon, gcount, mcount, weight
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lottery.model.LotteryItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_lottery_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_lottery_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_lottery_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lottery.model.LotteryItemExample" >
    delete from t_lottery_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lottery.model.LotteryItem" >
    insert into t_lottery_item (id, lotteryid, orderno, 
      name, icon, gcount, 
      mcount, weight)
    values (#{id,jdbcType=INTEGER}, #{lotteryid,jdbcType=INTEGER}, #{orderno,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{gcount,jdbcType=INTEGER}, 
      #{mcount,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lottery.model.LotteryItem" >
    insert into t_lottery_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="lotteryid != null" >
        lotteryid,
      </if>
      <if test="orderno != null" >
        orderno,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="gcount != null" >
        gcount,
      </if>
      <if test="mcount != null" >
        mcount,
      </if>
      <if test="weight != null" >
        weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lotteryid != null" >
        #{lotteryid,jdbcType=INTEGER},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="gcount != null" >
        #{gcount,jdbcType=INTEGER},
      </if>
      <if test="mcount != null" >
        #{mcount,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lottery.model.LotteryItemExample" resultType="java.lang.Integer" >
    select count(*) from t_lottery_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_lottery_item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lotteryid != null" >
        lotteryid = #{record.lotteryid,jdbcType=INTEGER},
      </if>
      <if test="record.orderno != null" >
        orderno = #{record.orderno,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.gcount != null" >
        gcount = #{record.gcount,jdbcType=INTEGER},
      </if>
      <if test="record.mcount != null" >
        mcount = #{record.mcount,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_lottery_item
    set id = #{record.id,jdbcType=INTEGER},
      lotteryid = #{record.lotteryid,jdbcType=INTEGER},
      orderno = #{record.orderno,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      gcount = #{record.gcount,jdbcType=INTEGER},
      mcount = #{record.mcount,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lottery.model.LotteryItem" >
    update t_lottery_item
    <set >
      <if test="lotteryid != null" >
        lotteryid = #{lotteryid,jdbcType=INTEGER},
      </if>
      <if test="orderno != null" >
        orderno = #{orderno,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="gcount != null" >
        gcount = #{gcount,jdbcType=INTEGER},
      </if>
      <if test="mcount != null" >
        mcount = #{mcount,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lottery.model.LotteryItem" >
    update t_lottery_item
    set lotteryid = #{lotteryid,jdbcType=INTEGER},
      orderno = #{orderno,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      gcount = #{gcount,jdbcType=INTEGER},
      mcount = #{mcount,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByLotteryId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_lottery_item
    where lotteryid = #{lotteryId,jdbcType=INTEGER}
      and <![CDATA[ gcount < mcount ]]>
    order by orderno asc
  </select>
</mapper>