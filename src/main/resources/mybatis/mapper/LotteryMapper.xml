<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lottery.dao.LotteryMapper" >
  <resultMap id="BaseResultMap" type="com.lottery.model.Lottery" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="isvalid" property="isvalid" jdbcType="INTEGER" />
    <result column="mcount" property="mcount" jdbcType="INTEGER" />
    <result column="forceshare" property="forceshare" jdbcType="INTEGER" />
    <result column="viewcount" property="viewcount" jdbcType="INTEGER" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, isvalid, mcount, forceshare, viewcount, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lottery.model.LotteryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_lottery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_lottery
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_lottery
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lottery.model.LotteryExample" >
    delete from t_lottery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lottery.model.Lottery" >
    insert into t_lottery (id, isvalid, mcount, 
      forceshare, viewcount, updatetime)
    values (#{id,jdbcType=INTEGER}, #{isvalid,jdbcType=INTEGER}, #{mcount,jdbcType=INTEGER}, 
      #{forceshare,jdbcType=INTEGER}, #{viewcount,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lottery.model.Lottery" >
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT max(id) AS id from t_lottery
    </selectKey>
    insert into t_lottery
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="isvalid != null" >
        isvalid,
      </if>
      <if test="mcount != null" >
        mcount,
      </if>
      <if test="forceshare != null" >
        forceshare,
      </if>
      <if test="viewcount != null" >
        viewcount,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="mcount != null" >
        #{mcount,jdbcType=INTEGER},
      </if>
      <if test="forceshare != null" >
        #{forceshare,jdbcType=INTEGER},
      </if>
      <if test="viewcount != null" >
        #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lottery.model.LotteryExample" resultType="java.lang.Integer" >
    select count(*) from t_lottery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_lottery
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.isvalid != null" >
        isvalid = #{record.isvalid,jdbcType=INTEGER},
      </if>
      <if test="record.mcount != null" >
        mcount = #{record.mcount,jdbcType=INTEGER},
      </if>
      <if test="record.forceshare != null" >
        forceshare = #{record.forceshare,jdbcType=INTEGER},
      </if>
      <if test="record.viewcount != null" >
        viewcount = #{record.viewcount,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_lottery
    set id = #{record.id,jdbcType=INTEGER},
      isvalid = #{record.isvalid,jdbcType=INTEGER},
      mcount = #{record.mcount,jdbcType=INTEGER},
      forceshare = #{record.forceshare,jdbcType=INTEGER},
      viewcount = #{record.viewcount,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lottery.model.Lottery" >
    update t_lottery
    <set >
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="mcount != null" >
        mcount = #{mcount,jdbcType=INTEGER},
      </if>
      <if test="forceshare != null" >
        forceshare = #{forceshare,jdbcType=INTEGER},
      </if>
      <if test="viewcount != null" >
        viewcount = #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lottery.model.Lottery" >
    update t_lottery
    set isvalid = #{isvalid,jdbcType=INTEGER},
      mcount = #{mcount,jdbcType=INTEGER},
      forceshare = #{forceshare,jdbcType=INTEGER},
      viewcount = #{viewcount,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>